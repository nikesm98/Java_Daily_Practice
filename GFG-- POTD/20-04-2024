class Solution {
    public static ArrayList<Integer> findUnion(int arr1[], int arr2[], int n, int m) {

        if (arr1[0] > arr2[0]) {
            return findUnion(arr2, arr1, m, n);
        }

        ArrayList<Integer> ans = new ArrayList<>();
        ans.add(arr1[0]);
        int i = 1, j = 0;
        while (i < n && j < m) {
            if (arr1[i] < arr2[j]) {
                if (!ans.get(ans.size() - 1).equals(arr1[i])) {
                    ans.add(arr1[i]);
                }
                i++;
            } else {
                if (!ans.get(ans.size() - 1).equals(arr2[j])) {
                    ans.add(arr2[j]);
                }
                j++;
            }
        }
        while (i < n) {
            if (!ans.get(ans.size() - 1).equals(arr1[i])) {
                ans.add(arr1[i]);
            }
            i++;
        }
        while (j < m) {
            if (!ans.get(ans.size() - 1).equals(arr2[j])) {
                ans.add(arr2[j]);
            }
            j++;
        }

        return ans;
    }
}