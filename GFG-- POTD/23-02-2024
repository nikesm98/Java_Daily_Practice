class Solution {
    public static int maxProfit(int n, int[] price) {
        int[] temp = new int[n];

        // first traversal was from right to left
        int maxi = price[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            maxi = Math.max(maxi, price[i]);
            temp[i] = Math.max(temp[i + 1], maxi - price[i]);
        }

        // second traversal
        int mini = price[0];
        for (int i = 1; i < n; i++) {
            mini = Math.min(price[i], mini);
            temp[i] = Math.max(temp[i - 1], price[i] - mini + temp[i]);
        }

        return temp[n - 1];
    }
}   
